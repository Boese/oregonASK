package org.oregonask.entities;
// Generated Oct 28, 2014 11:43:30 AM by Hibernate Tools 4.3.1

import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Summerfood generated by hbm2java
 */
@Entity
@Table(name = "SUMMERFOOD", catalog = "OREGONASKDB", uniqueConstraints = @UniqueConstraint(columnNames = "SITE_NUMBER"))
public class Summerfood implements java.io.Serializable,IEntity {

	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "SUMMERFOOD_ID", unique = true, nullable = false)
	private Integer summerfoodId;
	
	@Column(name = "SITE_NAME", nullable = false, length = 250)
	private String siteName;
	
	@Column(name = "SITE_NUMBER", unique = true, nullable = false, length = 45)
	private String siteNumber;
	
	@Column(name = "STREET", length = 250)
	private String street;
	
	@Column(name = "CITY", length = 45)
	private String city;
	
	@Column(name = "ZIP", length = 45)
	private String zip;
	
	@Column(name = "STATE", length = 45)
	private String state;
	
	@Column(name = "COUNTY", length = 45)
	private String county;
	
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "summerfoodBySchool")
	private Set<School> school;
	
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "summerfoodBySponsor")
	private Set<Sponsor> sponsor;
	
	@OneToMany(fetch=FetchType.LAZY, cascade=CascadeType.ALL)
	@JoinTable(name="SUMMERFOOD_INFO_BY_YEAR", 
			joinColumns=@JoinColumn(name="SUMMERFOOD_ID"),
			inverseJoinColumns=@JoinColumn(name="SUMMERFOOD_INFO_ID"))
	private Set<SummerfoodInfo> summerfoodInfo;

	public Summerfood() {
	}

	
	public Integer getSummerfoodId() {
		return this.summerfoodId;
	}

	public void setSummerfoodId(Integer summerfoodId) {
		this.summerfoodId = summerfoodId;
	}

	
	public String getSiteName() {
		return this.siteName;
	}

	public void setSiteName(String siteName) {
		this.siteName = siteName;
	}

	
	public String getSiteNumber() {
		return this.siteNumber;
	}

	public void setSiteNumber(String siteNumber) {
		this.siteNumber = siteNumber;
	}

	
	public String getStreet() {
		return this.street;
	}

	public void setStreet(String street) {
		this.street = street;
	}

	
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	
	public String getZip() {
		return this.zip;
	}

	public void setZip(String zip) {
		this.zip = zip;
	}

	
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	
	public String getCounty() {
		return this.county;
	}

	public void setCounty(String county) {
		this.county = county;
	}

	public Set<School> getSchool() {
		return school;
	}

	public void setSchool(Set<School> school) {
		this.school = school;
	}

	public Set<Sponsor> getSponsor() {
		return sponsor;
	}

	public void setSponsor(Set<Sponsor> sponsor) {
		this.sponsor = sponsor;
	}

	public Set<SummerfoodInfo> getSummerfoodInfo() {
		return summerfoodInfo;
	}

	public void setSummerfoodInfo(Set<SummerfoodInfo> summerfoodInfo) {
		this.summerfoodInfo = summerfoodInfo;
	}
	
	@Override
	public void deepCopy(Object obj) {
		setCity(((Summerfood) obj).getCity());
		setCounty(((Summerfood) obj).getCounty());
		setSchool(((Summerfood) obj).getSchool());
		setSiteName(((Summerfood) obj).getSiteName());
		setSiteNumber(((Summerfood) obj).getSiteNumber());
		setSponsor(((Summerfood) obj).getSponsor());
		setState(((Summerfood) obj).getState());
		setStreet(((Summerfood) obj).getStreet());
		setSummerfoodId(((Summerfood) obj).getSummerfoodId());
		setSummerfoodInfo(((Summerfood) obj).getSummerfoodInfo());
		setZip(((Summerfood) obj).getZip());
	}

}
